{% extends '::basemenu.html.twig' %}

{% block header -%}
    <div class="page-header">
        Indicadores
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            Principales Indicadores
        </small>
    </div><!-- /.page-header -->
{% endblock %}   
{% block menu %}
    {{ menu|raw }}
{% endblock %} 
{% block estructuras %}
    {% for est in entest %}  
        <li class="item">
            <div class="product-img">
              <span class="info-box-icon-oz {% if (est.estructura == 'A') %} bg-aqua {% elseif (est.estructura == 'B') %} bg-green {% else %} bg-orange {% endif %} "><i class="ion ion-ios-people-outline"></i></span>  
            </div>
            <div class="product-info">
              <a href="javascript:void(0)" class="product-title">Estructura {{ est.estructura  }}
                <span class="label label-warning pull-right">{{ est.asignadas}} / {{ est.comisiones }} </span></a>
              <span class="product-description">
                    Completado al: {{ ((est.asignadas/est.comisiones)*100)|number_format(2,'.',',') }} 
              </span>
              <div class="progress-group">
                  <span class="progress-text">Comisiones</span>
                  <span class="progress-number"><b>{{ est.asignadas }}</b>/{{ est.comisiones }}</span>
                  <div class="progress sm">
                    <div class="progress-bar progress-bar-aqua" style="width: {{ (est.asignadas/est.comisiones)*100 }}%"></div>
                  </div>
              </div>  
            </div>
          </li>
    {% endfor %}
{% endblock %}       
{#% block content %}
   <!--table class="table-responsive">
       <tr>
           <td>Número de encuestas procesadas:</td>
           <td style="text-align: right">{#{ dtgen.totalenc }}</td>
       <tr>
       <tr>
           <td>Número de encuestas pendientes:</td>
           <td style="text-align: right">{{ dtgen.encpen }}</td>
       <tr>
       <tr>
           <td>Número de encuestas ingresadas por su usuario:</td>
           <td style="text-align: right">{{ dtgen.encxusr }}</td>
       <tr>    
       <tr>
           <td>Fecha última actualización:</td>
           <td style="text-align: right">{{ dtgen.ultfecha|date("m/d/Y H:i:s") }}</td>
       <tr>
           
   </table -->    
{% endblock % #}

{% block javascripts %}
    
    {{ parent() }}
    <!-- jQuery Knob -->
    <script src="{{ asset('bundles/bower_components/jquery-knob/js/jquery.knob.js') }}"></script>
<script>
  $(function () {
    /* jQueryKnob */

    $(".knob").knob({
      /*change : function (value) {
       //console.log("change : " + value);
       },
       release : function (value) {
       console.log("release : " + value);
       },
       cancel : function () {
       console.log("cancel : " + this.value);
       },*/
      draw: function () {

        // "tron" case
        if (this.$.data('skin') == 'tron') {

          var a = this.angle(this.cv)  // Angle
              , sa = this.startAngle          // Previous start angle
              , sat = this.startAngle         // Start angle
              , ea                            // Previous end angle
              , eat = sat + a                 // End angle
              , r = true;

          this.g.lineWidth = this.lineWidth;

          this.o.cursor
          && (sat = eat - 0.3)
          && (eat = eat + 0.3);

          if (this.o.displayPrevious) {
            ea = this.startAngle + this.angle(this.value);
            this.o.cursor
            && (sa = ea - 0.3)
            && (ea = ea + 0.3);
            this.g.beginPath();
            this.g.strokeStyle = this.previousColor;
            this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sa, ea, false);
            this.g.stroke();
          }

          this.g.beginPath();
          this.g.strokeStyle = r ? this.o.fgColor : this.fgColor;
          this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sat, eat, false);
          this.g.stroke();

          this.g.lineWidth = 2;
          this.g.beginPath();
          this.g.strokeStyle = this.o.fgColor;
          this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2 / 3, 0, 2 * Math.PI, false);
          this.g.stroke();

          return false;
        }
      }
    });
    /* END JQUERY KNOB */
  });
  
</script>
{% endblock %}    